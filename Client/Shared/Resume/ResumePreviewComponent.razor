@using MyVideoResume.Abstractions.Core
@using MyVideoResume.Abstractions.Resume.Formats.JSONResumeFormat
@using MyVideoResume.Data.Models.Resume
@attribute [Authorize]
@inherits BaseComponent
@inject DashboardService Service

<RadzenCard style="background-color:white;">
    <RadzenCard class="rz-shadow-0 rz-border-radius-0 rz-p-8" style="margin: 1rem calc(-1 * var(--rz-card-padding));background-color:white;">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" class="rz-p-4">
@*             <RadzenImage Path="@ResumeEntity?.UserId" Style="width: 100px; height: 100px; border-radius: 50%;" />
 *@            <RadzenStack Gap="0">
                <RadzenText style="color: #262526" TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Candidate</RadzenText>
                <RadzenText style="color: #262526" TextStyle="TextStyle.Body1"><b>@(ResumeEntity?.Basics?.Name)</b></RadzenText>
                <RadzenText style="color: #262526" TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Company</RadzenText>
                <RadzenText style="color: #262526" TextStyle="TextStyle.Body1"><b>@(ResumeEntity?.Basics?.Summary)</b></RadzenText>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>
    <RadzenCard class="rz-shadow-0 rz-border-radius-0 rz-p-8" style="margin: 1rem calc(-1 * var(--rz-card-padding)); background-color: #0e44cc">
        <RadzenText TextStyle="TextStyle.H6" style="color:white; "><strong>Profile</strong></RadzenText>
        <RadzenRow RowGap="0">
            <RadzenColumn SizeSM="4">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="color:white; ">Country</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" style="color:white; "><b> @(ResumeEntity?.Basics?.Summary)</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class=" rz-display-flex rz-mt-4 rz-mb-0" style="color:white; ">City</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" style="color:white; "><b>@(ResumeEntity?.Basics?.Summary)</b></RadzenText>
            </RadzenColumn>
            <RadzenColumn SizeSM="8">
                <RadzenText TextStyle="TextStyle.Overline" style="color:white; " class="rz-display-flex rz-mt-4 rz-mb-0">Ship name</RadzenText>
                <RadzenText style="color:white; " TextStyle="TextStyle.Body1"><b>@(ResumeEntity?.Basics?.Summary)</b></RadzenText>
                <RadzenText style="color:white; " TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Freight</RadzenText>
                <RadzenText style="color:white; " TextStyle="TextStyle.Body1"><b>@(ResumeEntity?.Basics?.Summary)</b></RadzenText>
            </RadzenColumn>
        </RadzenRow>
    </RadzenCard>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="0">
        <RadzenButton ButtonStyle="ButtonStyle.Dark" Variant="Variant.Text" Icon="delete" Text="Delete" Click=Delete />
        <RadzenButton ButtonStyle="ButtonStyle.Danger" Variant="Variant.Text" Icon="edit" Text="Edit" />
    </RadzenStack>
</RadzenCard>

@code {

    [Parameter] public EventCallback<ResponseResult> DeleteCompleted { get; set; }

    [Parameter]
    public MetaResumeEntity ResumeEntity { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (ResumeEntity == null)
            ResumeEntity = new MetaResumeEntity()
                {
                    Basics = new Basics() { Name = "Place Holder", Summary = "Upload PDF Resume" }
                };
    }

    protected async Task Delete()
    {
        var result = new ResponseResult();
        await Service.Delete(ResumeEntity);
        await DeleteCompleted.InvokeAsync(result);
    }
}
