@using BlazorBootstrap

<RadzenRow Gap="5" RowGap="5" style="margin-bottom:25px">
    <RadzenColumn>
        <RadzenCard>
            <RadzenRow>
                <h2>Resume Parser (Convert PDF to JSON)</h2>
            </RadzenRow>
            <ResumeUploadToJsonComponent @ref=ResumeUploadToJsonComponent UploadCompleted=@UploadCompletedHandler></ResumeUploadToJsonComponent>
            <RadzenCard>
                <RadzenButton Click=@(args => DownloadFile()) Disabled=@DisableDownload>Download JSON Resume</RadzenButton>
                <button id="copyButton" onclick="copyToClipboard()" class="rz-button rz-button-md rz-variant-filled rz-primary rz-shade-default">Copy JSON Resume To Clipboard</button>
            </RadzenCard>
            <RadzenCard>
                <Markdown Id="resumeJson">@Result</Markdown>
            </RadzenCard>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

<style>
    #ddUpload {
        left: 0;
        --rz-upload-button-bar-background-color: transparent;
        --rz-upload-button-bar-padding: 0;
    }

        #ddUpload .rz-fileupload-buttonbar .rz-fileupload-choose {
            width: 100%;
            text-align: center;
            font-size: 16px;
            padding: 100px 0;
        }
</style>

<script>
    function saveTextAsFile(textToWrite, fileNameToSaveAs)
    {
        var textFileAsBlob = new Blob([textToWrite], {type:'text/plain'});
        var downloadLink = document.createElement("a");
        downloadLink.download = fileNameToSaveAs;
        downloadLink.innerHTML = "Download File";
        if (window.webkitURL != null)
        {
            // Chrome allows the link to be clicked
            // without actually adding it to the DOM.
            downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);
        }
        else
        {
            // Firefox requires the link to be added to the DOM
            // before it can be clicked.
            downloadLink.href = window.URL.createObjectURL(textFileAsBlob);
            downloadLink.onclick = destroyClickedElement;
            downloadLink.style.display = "none";
            document.body.appendChild(downloadLink);
        }

        downloadLink.click();
    }
</script>
<script>
    function copyToClipboard()
    {
      try {
        var text = document.getElementById("resumeJson").innerText;
        navigator.clipboard.writeText(text);
      }
      catch (err) {
        console.error('Failed to copy: ', err);
      }
    }
</script>